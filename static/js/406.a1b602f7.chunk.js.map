{"version":3,"file":"static/js/406.a1b602f7.chunk.js","mappings":"yPACA,GAAgB,MAAQ,4BAA4B,oBAAsB,0CAA0C,iBAAmB,uCAAuC,iBAAmB,uCAAuC,eAAiB,sC,UCoFzP,MAhFA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAlE,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACdN,GAAQ,SAAAO,GAAS,yBAAUA,GAAV,cAAsBX,EAAOU,GAA7B,GAClB,EAQOV,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAErB,OACE,iCACE,eAAIU,UAAWC,EAAAA,MAAf,uBACA,iBAAMC,OAAO,SAASC,SAXL,SAAAP,GACnBA,EAAMQ,iBACNX,EAASY,EAAAA,EAAAA,SAAoBd,IAC7BC,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC1C,EAOG,UACE,iBAAKU,UAAWC,EAAAA,UAAhB,WACE,iBAAKD,UAAWC,EAAAA,oBAAhB,WACE,kBACED,UAAWC,EAAAA,iBACXK,GAAG,OACHC,KAAK,OACLnB,KAAK,OACLU,MAAOV,EACPoB,SAAUb,EACVc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAOC,QAAQ,OAAOZ,UAAWC,EAAAA,iBAAjC,sBAKF,iBAAKD,UAAWC,EAAAA,oBAAhB,WACE,kBACED,UAAWC,EAAAA,iBACXK,GAAG,QACHC,KAAK,QACLnB,KAAK,QACLqB,QAAQ,mDACRC,MAAM,wBACNC,UAAQ,EACRb,MAAOT,EACPmB,SAAUb,KAEZ,kBAAOiB,QAAQ,QAAQZ,UAAWC,EAAAA,iBAAlC,uBAIF,iBAAKD,UAAWC,EAAAA,oBAAhB,WACE,kBACED,UAAWC,EAAAA,iBACXK,GAAG,WACHC,KAAK,WACLnB,KAAK,WACLuB,UAAQ,EACRb,MAAOR,EACPkB,SAAUb,EACVkB,aAAa,SAEf,kBAAOD,QAAQ,WAAWZ,UAAWC,EAAAA,iBAArC,0BAKF,mBAAQD,UAAWC,EAAAA,eAAkBM,KAAK,SAA1C,6BAOT,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"RegisterPage_title__Yjy6g\",\"textField__floating\":\"RegisterPage_textField__floating__7tl8Q\",\"textField__input\":\"RegisterPage_textField__input__7OaoE\",\"textField__label\":\"RegisterPage_textField__label__E-PoX\",\"textField__btn\":\"RegisterPage_textField__btn__zfIfL\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from 'redux/auth/authOperations';\nimport s from './RegisterPage.module.css';\n\nfunction RegisterPage() {\n  const [form, setForm] = useState({ name: '', email: '', password: '' });\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setForm(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(operations.register(form));\n    setForm({ name: '', email: '', password: '' });\n  };\n\n  const { name, email, password } = form;\n\n  return (\n    <>\n      <h1 className={s.title}>Register</h1>\n      <form action=\"submit\" onSubmit={handleSubmit}>\n        <div className={s.textField}>\n          <div className={s.textField__floating}>\n            <input\n              className={s.textField__input}\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <label htmlFor=\"name\" className={s.textField__label}>\n              Name\n            </label>\n          </div>\n\n          <div className={s.textField__floating}>\n            <input\n              className={s.textField__input}\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n              title=\"Example user@mail.com\"\n              required\n              value={email}\n              onChange={handleChange}\n            />\n            <label htmlFor=\"email\" className={s.textField__label}>\n              Email\n            </label>\n          </div>\n          <div className={s.textField__floating}>\n            <input\n              className={s.textField__input}\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              required\n              value={password}\n              onChange={handleChange}\n              autoComplete=\"off\"\n            />\n            <label htmlFor=\"password\" className={s.textField__label}>\n              Password\n            </label>\n          </div>\n\n          <button className={s.textField__btn} type=\"submit\">\n            Register\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["useState","name","email","password","form","setForm","dispatch","useDispatch","handleChange","event","currentTarget","value","prevState","className","s","action","onSubmit","preventDefault","operations","id","type","onChange","pattern","title","required","htmlFor","autoComplete"],"sourceRoot":""}