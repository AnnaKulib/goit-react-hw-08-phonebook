{"version":3,"file":"static/js/751.314b7a29.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactForm_title__jZguf\",\"textField__floating\":\"ContactForm_textField__floating__ecIGL\",\"textField__input\":\"ContactForm_textField__input__PT0WH\",\"textField__label\":\"ContactForm_textField__label__bTr7C\",\"textField__btn\":\"ContactForm_textField__btn__Y6vVk\"};","import React from 'react';\nimport { useState } from 'react';\nimport {\n  useAddContactsMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsOperation';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact] = useAddContactsMutation();\n  const { data } = useGetContactsQuery();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n      // return new Error(`Something wrong, please try again`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      data.find(\n        contact => contact.name.toLowerCase() === name.toLocaleLowerCase()\n      )\n    ) {\n      return toast.error(`${name} is already in contact`);\n    }\n    addContact({ name, number });\n    toast.success('Contact added!');\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h1 className={s.title}>Phonebook</h1>\n      <form action=\"submit\" onSubmit={handleSubmit}>\n        <div className={s.textField}>\n          <div className={s.textField__floating}>\n            <input\n              className={s.textField__input}\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={handleInputChange}\n              // placeholder=\"Your Name\"\n            />\n            <label htmlFor=\"name\" className={s.textField__label}>\n              Name\n            </label>\n          </div>\n          <div className={s.textField__floating}>\n            <input\n              className={s.textField__input}\n              type=\"tel\"\n              id=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={handleInputChange}\n              // placeholder=\"+XX XXX XX XX\"\n            />\n            <label htmlFor=\"tel\" className={s.textField__label}>\n              Phone number\n            </label>\n          </div>\n          <button type=\"submit\" className={s.textField__btn}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"thumb\":\"ContactItem_thumb__25uaL\",\"button\":\"ContactItem_button__IRFBz\"};","import PropTypes from 'prop-types';\n\nimport { useDeleteContactsMutation } from 'redux/contacts/contactsOperation';\nimport s from './ContactItem.module.css';\nimport { toast } from 'react-toastify';\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactsMutation();\n  const deleteNumber = () => {\n    deleteContact(id);\n    toast.success('Contact deleted!');\n  };\n\n  return (\n    <li className={s.item}>\n      <p>{name}</p>\n      <div className={s.thumb}>\n        <p>{number}</p>\n        <button className={s.button} type=\"button\" onClick={deleteNumber}>\n          {isLoading ? 'Deleting...' : 'Delete'}\n        </button>\n      </div>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { useGetContactsQuery } from 'redux/contacts/contactsOperation';\nimport ContactItem from 'components/ContactItem';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const { data } = useGetContactsQuery();\n  const filter = useSelector(getFilter);\n\n  function dataSort(a, b) {\n    let nameA = a.name.toLowerCase(),\n      nameB = b.name.toLowerCase();\n    if (nameA < nameB) return -1;\n    if (nameA > nameB) return 1;\n    return 0;\n  }\n\n  const filterAndSortContacts = () => {\n    return (\n      data &&\n      data\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n        .sort(dataSort)\n    );\n  };\n\n  const contacts = filterAndSortContacts();\n\n  return (\n    <>\n      {contacts && (\n        <ul className={s.list}>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"text\":\"Filter_text__uqQRu\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/slice';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const valueFiltered = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    dispatch(changeFilter(event.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <h2 className={s.title}>Your contacts</h2>\n      <label className={s.label}>\n        <span className={s.text}>Find contact by name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"filter\"\n          value={valueFiltered}\n          onChange={onChange}\n          // onChange={event => dispatch(changeFilter(event.target.value))}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nfunction ContactsPage() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["useState","name","setName","number","setNumber","useAddContactsMutation","addContact","data","useGetContactsQuery","handleInputChange","event","currentTarget","value","className","s","action","onSubmit","preventDefault","find","contact","toLowerCase","toLocaleLowerCase","toast","id","type","pattern","title","required","onChange","htmlFor","getFilter","state","filter","useDeleteContactsMutation","deleteContact","isLoading","onClick","useSelector","dataSort","a","b","nameA","nameB","contacts","includes","sort","map","valueFiltered","dispatch","useDispatch","changeFilter"],"sourceRoot":""}